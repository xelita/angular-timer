var angularTimerModule=angular.module("angularTimerModule",[]);angularTimerModule.constant("angularTimerConstants",{defaultSettings:{autoStart:false,intervalMs:5e3,eventName:"angular-timer-tick"}});angularTimerModule.factory("angularTimerService",["$rootScope","$log","angularTimerConstants",function(e,t,n){var r=function(n){t.debug("eventEmitterFunction invoked.");e.$broadcast(n.eventName,{})};return{defaultSettings:function(){t.debug("angularTimerService.defaultSettings.");return n.defaultSettings},startTimer:function(e){t.debug("IN angularTimerService.startTimer.");var n=function(){r(e)};return setInterval(n,e.intervalMs)},stopTimer:function(e){t.debug("IN angularTimerService.stopTimer.");clearInterval(e)}}}]);angularTimerModule.directive("ngTimer",function(e,t){return{priority:0,restrict:"E",scope:{autoStart:"@startAuto",intervalMs:"@",eventName:"@"},link:function(n,r,i){var s;var o=function(){e.debug("IN ngTimer.timerInitFunction.");var r=angular.isDefined(n.autoStart)?n.autoStart==="true":t.defaultSettings().autoStart;var i=n.eventName||t.defaultSettings().eventName;var o=Number(n.intervalMs)||t.defaultSettings().intervalMs;var u={autoStart:r,eventName:i,intervalMs:o};e.debug("timerConfig is: "+angular.toJson(u));if(u.autoStart===true){if(s){e.warn("A timer is currently running. Please stop it first. Timer id is: "+s)}else{s=t.startTimer(u);e.debug("timerId is:"+s)}}else if(s){e.debug("timerId to stop is:"+s);s=t.stopTimer(s)}};n.$watch("autoStart",function(){o()})}}})